//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluatedExpression", Namespace="http://schemas.datacontract.org/2004/07/CalculatorService")]
    [System.SerializableAttribute()]
    public partial class EvaluatedExpression : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Expression {
            get {
                return this.ExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionField, value) != true)) {
                    this.ExpressionField = value;
                    this.RaisePropertyChanged("Expression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/opAddition", ReplyAction="http://tempuri.org/ICalculator/opAdditionResponse")]
        Client.ServiceReference1.EvaluatedExpression opAddition(int lvalue, int rvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/opSubtraction", ReplyAction="http://tempuri.org/ICalculator/opSubtractionResponse")]
        Client.ServiceReference1.EvaluatedExpression opSubtraction(int lvalue, int rvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/opMultiplication", ReplyAction="http://tempuri.org/ICalculator/opMultiplicationResponse")]
        Client.ServiceReference1.EvaluatedExpression opMultiplication(int lvalue, int rvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/opDivision", ReplyAction="http://tempuri.org/ICalculator/opDivisionResponse")]
        Client.ServiceReference1.EvaluatedExpression opDivision(int lvalue, int rvalue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/undo", ReplyAction="http://tempuri.org/ICalculator/undoResponse")]
        Client.ServiceReference1.EvaluatedExpression undo();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : Client.ServiceReference1.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<Client.ServiceReference1.ICalculator>, Client.ServiceReference1.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceReference1.EvaluatedExpression opAddition(int lvalue, int rvalue) {
            return base.Channel.opAddition(lvalue, rvalue);
        }
        
        public Client.ServiceReference1.EvaluatedExpression opSubtraction(int lvalue, int rvalue) {
            return base.Channel.opSubtraction(lvalue, rvalue);
        }
        
        public Client.ServiceReference1.EvaluatedExpression opMultiplication(int lvalue, int rvalue) {
            return base.Channel.opMultiplication(lvalue, rvalue);
        }
        
        public Client.ServiceReference1.EvaluatedExpression opDivision(int lvalue, int rvalue) {
            return base.Channel.opDivision(lvalue, rvalue);
        }
        
        public Client.ServiceReference1.EvaluatedExpression undo() {
            return base.Channel.undo();
        }
    }
}
